name: API CI

on:
  pull_request:
    branches: [ dev, main ]
    paths:
      - "apps/api/**"
      - ".github/workflows/api-ci.yml"
  push:
    branches: [ dev ]
    paths:
      - "apps/api/**"
      - ".github/workflows/api-ci.yml"

jobs:
  laravel-tests:
    name: Run Laravel Tests
    runs-on: ubuntu-latest

    # All run steps inside apps/api
    defaults:
      run:
        working-directory: apps/api

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          extensions: mbstring, intl, pdo, pdo_sqlite, bcmath, openssl
          coverage: none

      - name: Cache Composer deps
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: ${{ runner.os }}-composer-${{ hashFiles('apps/api/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --no-interaction --prefer-dist --no-progress

      - name: Copy .env
        run: cp .env.example .env

      - name: Generate app key
        run: php artisan key:generate --force

      - name: Prepare SQLite database
        run: |
          mkdir -p database
          rm -f database/database.sqlite
          touch database/database.sqlite

      - name: Configure env for CI (SQLite)
        run: |
          {
            echo "DB_CONNECTION=sqlite";
            echo "DB_DATABASE=${GITHUB_WORKSPACE}/apps/api/database/database.sqlite";
            echo "CACHE_DRIVER=array";
            echo "SESSION_DRIVER=array";
            echo "QUEUE_CONNECTION=sync";
          } >> .env

      # If your tests don't need real tables yet, you can comment this out
      - name: Run migrations
        run: php artisan migrate --no-interaction -vvv

      - name: Run tests
        run: php artisan test -q
